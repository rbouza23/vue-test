/// Helper to import a custom fonts
/// @param {String} $family - Font family name
/// @param {Number} $weight - Font weight
/// @param {String} $style  - Font style
/// @param {String} $path   - Font location (e.g.: 'oswald/oswald-regular')
@mixin custom-font($family, $weight, $style, $path) {
  @font-face {
    font-weight: $weight;
    font-family: $family;
    font-style: $style;
    src: url('~@/assets/fonts/#{$path}.woff2') format('woff2');
    font-display: swap;
  }
}

/// Helper to include custom transition
/// @param {String} $property - Property/properties to anim
/// @param {String} $time     - Transition time
/// @param {String} $easing   - Transition easing
/// @param {String} $delay    - Transition delay
@mixin custom-transition($property: all, $time: 0.35s, $easing: $easing-primary, $delay: 0s) {
  transition: $property $time $easing $delay;
}

/// Helper to style placeholders of inputs
/// @param {String} $color - Placeholder color
@mixin placeholder($color) {
  ::placeholder {
    color: $color;
  }
}

/// Helper to absolute position (by default) element with full size width & height
/// @param {String} $position - Position of the element
@mixin full-size($position: absolute) {
  position: $position;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/// Helper to make use of GPU accelerated graphics
@mixin gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/// Helper to make a full size background cover and center
/// @param {String} $url      - Relative url of the image
/// @param {String} $repeat   - Background-repeat property
/// @param {String} $position - Background-position property
/// @param {String} $size     - Background-size property
/// @param {String} $fixed    - Background-attachment property
@mixin bg-custom($url, $repeat: no-repeat, $position: center, $size: cover, $fixed: inherit) {
  background-image: url('#{$url}');
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
  background-attachment: $fixed;
}

/// Helper to include a custom Scrollbar on Chrome
/// @param {String} $width - Scrollbar width
/// @param {String} $color-track - Track color
/// @param {String} $color-thumb - Thumb color
/// @param {String} $color-thumb-hover - Thumb hover color
@mixin custom-scrollbar(
  $width: 7px,
  $height: auto,
  $border-radius: 10px,
  $color-track: #f1f1f1,
  $color-thumb: #888,
  $color-thumb-hover: #555
) {
  /* Scrollbar width */
  &::-webkit-scrollbar {
    width: $width;
    height: $height;
  }

  /* Track color */
  &::-webkit-scrollbar-track {
    background: $color-track;
  }

  /* Thumb color */
  &::-webkit-scrollbar-thumb {
    background: $color-thumb;
    border-radius: $border-radius;
  }

  /* Thumb color hover */
  &::-webkit-scrollbar-thumb:hover {
    background: $color-thumb-hover;
  }
}

/// Helper to clear inner floats
@mixin clearfix {
  &::after {
    display: table;
    clear: both;
    content: '';
  }
}

/// Helper to center element horizontal & vertical
@mixin center-horizontal-vertical {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/// Helper to add images for retina screens (2x) and big screens. (192dpi is apple retina screen)
@mixin responsive-img {
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (min-resolution: 2dppx) and (min-width: 125em) {
    @content;
  }
}

/// Media breakpoints for heights sizes. Only Desktop
/// @param {String} $size - Height size to apply
@mixin media-breakpoint-height($size) {
  @if $size==lg {
    @media (min-width: 992px) and (max-height: 830px) {
      @content;
    }
  } @else if $size==md {
    @media (min-width: 992px) and (max-height: 750px) {
      @content;
    }
  } @else if $size==sm {
    @media (min-width: 992px) and (max-height: 650px) {
      @content;
    }
  }
}

/// Helper to include media breakpoint for mobile landscape
@mixin media-breakpoint-mobile-landscape {
  @media only screen and (max-width: 991px) and (orientation: landscape) and (min-aspect-ratio: 13/9) {
    @content;
  }
}

/// Media breakpoints for width sizes
/// @param {String} $breakpoint - Breakpoint name: xs, sm, md, lg, xl
@mixin media-breakpoint-min($breakpoint) {
  @if $breakpoint==xl {
    @media only screen and (min-width: 1366px) {
      @content;
    }
  }

  @if $breakpoint==lg {
    @media only screen and (min-width: 992px) {
      @content;
    }
  }

  @if $breakpoint==md {
    @media only screen and (min-width: 768px) {
      @content;
    }
  }

  @if $breakpoint==sm {
    @media only screen and (min-width: 568px) {
      @content;
    }
  }

  @if $breakpoint==xs {
    @media only screen and (min-width: 320px) {
      @content;
    }
  }
}

/// Helper to style custom browser
/// @param {String} $browser - Browser abbreviation
@mixin style-custom-browser($browser) {
  @if $browser==ff {
    // Firefox
    @-moz-document url-prefix('') {
      @content;
    }
  } @else if $browser==sf {
    // Safari
    @media not all and (min-resolution: 0.001dpcm) {
      @supports (-webkit-appearance: none) {
        @content;
      }
    }
  } @else if $browser==edge {
    // Edge
    @supports (-ms-ime-align: auto) {
      @content;
    }
  } @else if $browser==ios {
    // iOS
    @supports (-webkit-touch-callout: none) {
      @content;
    }
    @supports not (-webkit-touch-callout: none) {
      @content;
    }
  }
}
